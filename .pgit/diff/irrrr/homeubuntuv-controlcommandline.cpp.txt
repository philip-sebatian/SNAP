+0$}
+0$    
+0$    
+0$    }
+0$
+0$    }
+0$        std::cout<<"invalid number of arguments for command"<<std::endl;
+0$        else{
+0$        }
+0$            
+0$            }
+0$            j.snapshot(argv[2]);
+0$            
+0$                auto j = loadTreeobject(argv[2]);
+0$            else{
+0$
+0$            }
+0$                file.close();
+0$                file << tree_json.dump(4); // Write formatted JSON to file
+0$                tree_json = new_head.to_json();
+0$                new_head.traverse_make_tree_obj(fs::current_path());
+0$                Treeobject new_head = Treeobject(argv[2]);
+0$            if(size==0){
+0$            
+0$            file.seekg(0, std::ios::beg);
+0$            std::streampos size = file.tellg();
+0$            file.seekg(0, std::ios::end);
+0$            std::fstream file((fs::current_path() / fs::path(".pgit") / fs::path("tree.json")).string());
+0$            }
+0$                ff.close();
+0$                ff.open(fs::current_path() / fs::path(".pgit") / fs::path("tree.json"), std::ios::out | std::ios::trunc);
+0$                std::fstream ff;
+0$            if(!fs::exists(fs::current_path() / fs::path(".pgit") / fs::path("tree.json"))){
+0$            json tree_json;
+0$        if(argc ==3){
+0$    if(std::strcmp(argv[1], "snapshot") == 0 ){
+0$    std::cout<<argv[1]<<std::endl;
+0${
+0$int main(int argc, char *argv[])
+0$
+0$#include "tree.cpp"
